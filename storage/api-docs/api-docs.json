{
    "openapi": "3.0.0",
    "info": {
        "title": "LARAPI",
        "description": "API Documentation for LARAPI",
        "contact": {
            "email": "lovenangelo.dev@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and handle 2FA if enabled",
                "description": "Authenticates a user with email and password. Supports both session-based and token-based authentication. If two-factor authentication is enabled, sends a 2FA code via email.",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "X-Request-Token",
                        "in": "header",
                        "description": "Header to indicate token-based authentication request",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "description": "Remember the user session",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "device_name": {
                                        "description": "Device name for token-based authentication",
                                        "type": "string",
                                        "example": "Mobile App"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication or 2FA required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "Successful Login with Token",
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        },
                                                        "role_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "two_factor_enabled": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "avatar_url": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "role": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "admin"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123def456..."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "title": "Two-Factor Authentication Required",
                                            "properties": {
                                                "two_factor_auth_required": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Two-factor authentication code has been sent to your email."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "title": "Login with 2FA Warning",
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123def456..."
                                                },
                                                "warning": {
                                                    "type": "string",
                                                    "example": "Two-factor authentication is enabled but the code could not be sent. You have been logged in without 2FA verification."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Login successful for session-based authentication (no JSON response)"
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "These credentials do not match our records."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "These credentials do not match our records."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Too many login attempts. Please try again in 60 seconds."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user and destroy session or revoke token",
                "description": "Logs out the authenticated user. For token-based authentication, revokes the current access token. For session-based authentication, destroys the session.",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "X-Request-Token",
                        "in": "header",
                        "description": "Header to indicate token-based authentication",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token revoked successfully (for token-based auth)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token revoked successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Session destroyed successfully (for session-based auth)"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/email/verification-notification": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Send a new email verification notification",
                "description": "Sends a new email verification link to the authenticated user. Handles both token-based and session-based requests.",
                "operationId": "sendEmailVerificationNotification",
                "parameters": [
                    {
                        "name": "X-Request-Token",
                        "in": "header",
                        "description": "Header to indicate token-based authentication request",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification link sent or already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "Verification Link Sent",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "verification-link-sent"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "title": "Already Verified",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Email already verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "Redirect to dashboard if already verified (session-based)",
                        "headers": {
                            "Location": {
                                "description": "Redirect location",
                                "schema": {
                                    "type": "string",
                                    "example": "/dashboard"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests (throttled)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Too many requests. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Reset user password",
                "description": "Resets the user's password using a valid token.",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "Password reset data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-value"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Password reset successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This password reset token is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Send password reset link",
                "description": "Sends a password reset link to the user's email address.",
                "operationId": "sendPasswordResetLink",
                "requestBody": {
                    "description": "Password reset link request data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "We have emailed your password reset link!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or unable to send reset link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "We can't find a user with that email address."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user and returns user data and token for token-based requests, or no content for session-based requests.",
                "operationId": "registerUser",
                "parameters": [
                    {
                        "name": "X-Request-Token",
                        "in": "header",
                        "description": "Header to indicate token-based registration request",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful (token-based)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Registration successful (session-based, no content)"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/two-factor/toggle": {
            "post": {
                "tags": [
                    "Two-Factor Authentication"
                ],
                "summary": "Enable or disable two-factor authentication",
                "description": "Toggles two-factor authentication for the authenticated user.",
                "operationId": "toggleTwoFactorAuth",
                "parameters": [
                    {
                        "name": "X-Request-Token",
                        "in": "header",
                        "description": "Header to indicate token-based request",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                ],
                "requestBody": {
                    "description": "2FA toggle data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "enabled"
                                ],
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "2FA toggled (token-based)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two-factor authentication has been enabled."
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "2FA toggled (session-based, no content)"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/two-factor/verify": {
            "post": {
                "tags": [
                    "Two-Factor Authentication"
                ],
                "summary": "Verify two-factor authentication code",
                "description": "Verifies the 2FA code for the user and logs them in.",
                "operationId": "verifyTwoFactorCode",
                "parameters": [
                    {
                        "name": "X-Request-Token",
                        "in": "header",
                        "description": "Header to indicate token-based request",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                ],
                "requestBody": {
                    "description": "2FA verification data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "2FA verified (token-based)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two-factor authentication successful."
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "2FA verified (session-based, no content)"
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid or expired two-factor code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired two-factor code."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/verify-email/{id}/{hash}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify user email address",
                "description": "Verifies the user's email address using the verification link.",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Email verification hash",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abcdef123456"
                        }
                    },
                    {
                        "name": "X-Request-Token",
                        "in": "header",
                        "description": "Header to indicate token-based verification request",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified or already verified (token-based)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "Email Verified",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Email verified successfully"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "title": "Already Verified",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Email already verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "Redirect to dashboard if already verified (session-based)",
                        "headers": {
                            "Location": {
                                "description": "Redirect location",
                                "schema": {
                                    "type": "string",
                                    "example": "/dashboard?verified=1"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/event": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get list of events",
                "description": "Display a listing of the resource.",
                "operationId": "4d0c981bc8f49b164d730e7d431121e7",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "author_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create Event",
                "description": "Store a newly created resource in storage.",
                "operationId": "dbea0e66a6e4d7d945569d0b5641db40",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "location",
                                    "start_at",
                                    "end_at"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "location": {
                                        "type": "string"
                                    },
                                    "start_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created successfully"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/event/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get an event by ID",
                "description": "Display the specified resource.",
                "operationId": "4b1da355b37ce4e659a4525f725f279d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Details"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an Event",
                "description": "Update the specified resource in storage.",
                "operationId": "17259879f98af859a1874f53cab3ec77",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "location": {
                                        "type": "string"
                                    },
                                    "start_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated successfully"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an Event by ID",
                "description": "Remove the specified resource from storage.",
                "operationId": "8a76b64112dcdaf8b4a5ec7080946915",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully. Contains details of the deleted event"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/event/bulk-delete": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Bulk delete events",
                "description": "Remove multiple events from storage.",
                "operationId": "c6f778f4e1ccd0b210688211a327e7b2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Users deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/event/users": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List all users who have created events",
                "description": "Display all users and their associated created events",
                "operationId": "92eb335bce95120be149c77e64e4db5c",
                "responses": {
                    "200": {
                        "description": "List users with their created events"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/event/user/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a specific User  with their events",
                "description": "Display specific user and their associated created events",
                "operationId": "251e57b00e5e76069111d104dc0f00b9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User with events details"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of roles",
                "description": "Display a listing of the resource.",
                "operationId": "93c2261fdff44d0b4b5323abfb48c31a",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of roles"
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "description": "Store a newly created resource in storage.",
                "operationId": "78570eacc5af3e103164ae1017c1c1b7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully"
                    }
                }
            }
        },
        "/api/v1/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get a role by ID",
                "description": "Display the specified resource.",
                "operationId": "62997b0b1345b6ac27bdf2e0c2a01be9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role details"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update a role",
                "description": "Update the specified resource in storage.",
                "operationId": "729a2c68021a0fdfe9de3f3ce6434ca9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete a role",
                "description": "Remove the specified resource from storage.",
                "operationId": "1b7e1988cd28cc4bcbb0c7c3e8716c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            }
        },
        "/api/v1/roles/bulk-destroy": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Bulk delete roles",
                "description": "Remove multiple roles from storage.",
                "operationId": "c860bbcbe7358115b910c8ca4c5e99e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roles deleted successfully"
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Display a listing of the resource.",
                "operationId": "7688f9cad74590c86a541e92e053d14a",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Store a newly created resource in storage.",
                "operationId": "d0f7e11952eee2519c44ac8a3eea449b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "role_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "description": "Display the specified resource.",
                "operationId": "d0a7e41d4ddfc0cd17aa69b7814e16b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Update the specified resource in storage.",
                "operationId": "0f73dc851ec61974fe60a3c4dc14f643",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "role_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Remove the specified resource from storage.",
                "operationId": "3d871da509da690abae626d1fdc06b04",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/v1/users/bulk-destroy": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Bulk delete users",
                "description": "Remove multiple users from storage.",
                "operationId": "34e470f952a6fa9f043c814427c4ee75",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Users deleted successfully"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication endpoints for login and logout"
        },
        {
            "name": "Email Verification",
            "description": "Endpoints for verifying user email addresses"
        },
        {
            "name": "Password Reset",
            "description": "Endpoints for requesting password reset links"
        },
        {
            "name": "Registration",
            "description": "Endpoints for user registration"
        },
        {
            "name": "Two-Factor Authentication",
            "description": "Endpoints for two-factor authentication (2FA) management and verification"
        },
        {
            "name": "Events",
            "description": "Endpoints for managing events, including CRUD operations and retrieving events associated with users."
        },
        {
            "name": "Roles",
            "description": "Endpoints for managing roles in the application"
        },
        {
            "name": "Users",
            "description": "Endpoints for managing users, including CRUD operations, bulk actions, and profile management."
        }
    ]
}